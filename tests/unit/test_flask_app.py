# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

"""Flask charm unit tests for the flask_app module."""
import json

import pytest

from charm_state import CharmState
from consts import FLASK_ENV_CONFIG_PREFIX
from flask_app import FlaskApp


@pytest.mark.parametrize(
    "flask_config",
    [
        pytest.param({"env": "test"}, id="env"),
        pytest.param({"permanent_session_lifetime": 1}, id="permanent_session_lifetime"),
        pytest.param({"debug": True}, id="debug"),
    ],
)
def test_flask_env(flask_config: dict):
    """
    arrange: create the Flask app object with a controlled charm state.
    act: none.
    assert: flask_environment generated by the Flask app object should be acceptable by Flask app.
    """
    charm_state = CharmState(flask_config=flask_config)
    flask_app = FlaskApp(charm_state=charm_state)
    assert flask_app.flask_environment == {
        f"{FLASK_ENV_CONFIG_PREFIX}{k.upper()}": json.dumps(v) for k, v in flask_config.items()
    }
